@startuml
!include <C4/C4_Container>

' Style
AddRelTag("response_tag", $lineStyle = DashedLine())

Person(user, "User", "The user of the system")

System_Boundary(local, "Culturebook system") {
    ' Client

    System_Boundary(client_bound, "Mobile App") {
        
        System(activity, "Main Activity", "Kotlin, XML")
        Container_Boundary(modules, "App Modules") {
            Container_Boundary(registerModule, "Registration/Login Module") {
                Container(registerScreen, "Registration Screen", "Kotlin, XML")
                Container(loginScreen, "Login Screen", "Kotlin, XML")
                Container(authVM, "Authentication View Model", "Kotlin")
                Container(authRepo, "Authentication Repository", "Kotlin")
            }

            Container_Boundary(nearbyModule, "Nearby Elements Module") {
                Container(nearbyScreen, "Nearby Screen", "Kotlin, XML")
                Container(nearbyVM, "Nearby View Model", "Kotlin")
                Container(nearbyRepo, "Nearby Repository", "Kotlin")
            }

            Container_Boundary(searchModule, "Search Module") {
                Container(searchScreen, "Search Screen", "Kotlin, XML")
                Container(searchVM, "Search View Model", "Kotlin")
                Container(searchRepo, "Search Repository", "Kotlin")
            }

            Container_Boundary(addElementModule, "Add Element Module") {
                Container(addElementScreen, "Add Element Screen", "Kotlin, XML")
                Container(addVM, "Add an element View Model", "Kotlin")
                Container(addRepo, "Add an element Repository", "Kotlin")
            }

            Container_Boundary(elementDetailsModule, "Element Details Module") {
                Container(elementDetailsScreen, "Element Details Screen", "Kotlin, XML")
                Container(elementVM, "Element Details View Model", "Kotlin")
                Container(elementRepo, "Element Details Repository", "Kotlin")
            }

            Container_Boundary(contrDetailsModule, "Contribution Details Module" ) {
                Container(contributionDetailsScreen, "Contribution Details Screen", "Kotlin, XML")
                Container(contributionVM, "Contribution Details View Model", "Kotlin")
                Container(contributionRepo, "Contribution Details Repository", "Kotlin")
            }

            Container_Boundary(accountModule, "Account Module") {
                Container(accountScreen, "Account Screen", "Kotlin, XML")
                Container(accountVM, "Account View Model", "Kotlin")
                Container(accountRepo, "Account Repository", "Kotlin")
            }
        }

        Container(api_interface, "API interface", "Retrofit")
        
        ' Relations
        
        BiRel_U(api_interface, authRepo, " ", $tags="response_tag")
        BiRel_U(api_interface, nearbyRepo, " ", $tags="response_tag")
        BiRel_U(api_interface, elementRepo, " ", $tags="response_tag")
        BiRel_U(api_interface, contributionRepo, " ", $tags="response_tag")
        BiRel_U(api_interface, addRepo, " ", $tags="response_tag")
        BiRel_U(api_interface, accountRepo, " ", $tags="response_tag")

        BiRel_D(authVM, authRepo, " ")
        BiRel_D(nearbyVM, nearbyRepo, " ")
        BiRel_D(elementVM, elementRepo, " ")
        BiRel_D(contributionVM, contributionRepo, " ")
        BiRel_D(addVM, addRepo, " ")
        BiRel_D(accountVM, accountRepo, " ")
        BiRel_D(searchVM, searchRepo, " ")

        BiRel_D(registerScreen, authVM, " ")
        BiRel_D(loginScreen, authVM, " ")
        BiRel_D(nearbyScreen, nearbyVM, " ")
        BiRel_D(elementDetailsScreen, elementVM, " ")
        BiRel_D(contributionDetailsScreen, contributionVM, " ")
        BiRel_D(addElementScreen, addVM, " ")
        BiRel_D(accountScreen, accountVM, " ")
        BiRel_D(searchScreen, searchVM, " ")

        Rel(modules, activity, " ")
    }

    ' Backend
    System_Boundary(api_bound, "API") {
        System_Boundary(api_gw, "API Gateway") {
            Container(load_balance, "Proxy", "Responsible for distributing the api calls and handling the responses")
            Container(logger, "Logger", "Responsible for tracking each session")

            ' Relations
            BiRel_R(load_balance, logger, " ")
        }
        
        
        Container_Boundary(auth, "Authentication Module") {
            Container(auth_model, "Authentication Repository", "Kotlin")
            Container(auth_logic, "Authentication Business Logic", "Kotlin")
            Rel_U(auth_model, auth_logic, " ")
        }

        Container_Boundary(nearby, "Nearby Module") {
            Container(nearby_model, "Nearby Repository", "Kotlin")
            Container(nearby_logic, "Nearby Business Logic", "Kotlin")
            Rel_U(nearby_model, nearby_logic, " ")
        }

        Container_Boundary(element, "Elements Module") {
            Container(element_model, "Elements Repository", "Kotlin")
            Container(element_logic, "Elemenets Business Logic", "Kotlin")
            Rel_U(element_model, element_logic, " ")
        }

        Container_Boundary(contribution, "Contributions Module") {
            Container(contr_model, "Contribution Repository", "Kotlin")
            Container(contr_logic, "Contribution Business Logic", "Kotlin")
            Rel_U(contr_model, contr_logic, " ")
        }

        Container_Boundary(add_element, "Add element Module") {
            Container(add_model, "Add element Repository", "Kotlin")
            Container(add_logic, "Add element Business Logic", "Kotlin")
            Rel_U(add_model, add_logic, " ")
        }

        Container_Boundary(account, "Account Module") {
            Container(account_model, "Account Repository", "Kotlin")
            Container(account_logic, "Account Business Logic", "Kotlin")
            Rel_U(account_model, account_logic, " ")
        }

        ContainerDb(db, "Data access Module", "Handles all read/write operations")
        
        ' Relations

        BiRel_D(load_balance, auth_logic, " ")
        BiRel_D(load_balance, nearby_logic, " ")
        BiRel_D(load_balance, element_logic, " ")
        BiRel_D(load_balance, contr_logic, " ")
        BiRel_D(load_balance, add_logic, " ")
        BiRel_D(load_balance, account_logic, " ")

        BiRel_U(db, auth_model, " ", $tags="response_tag")
        BiRel_U(db, nearby_model, " ", $tags="response_tag")
        BiRel_U(db, element_model, " ", $tags="response_tag")
        BiRel_U(db, contr_model, " ", $tags="response_tag")
        BiRel_U(db, add_model, " ", $tags="response_tag")
        BiRel_U(db, account_model, " ", $tags="response_tag")
    }
}

' Layout & Styles
Lay_U(client_bound, user)
Lay_U(api_bound, client_bound)

' Api Relations
Rel_D(api_interface, load_balance, " ")
Rel_U(load_balance, api_interface, " ", $tags="response_tag")

' User relations
BiRel(user, activity, " ")
@enduml
